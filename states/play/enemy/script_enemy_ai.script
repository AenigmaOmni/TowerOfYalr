go.property("turn", false)

local detection_diam = 4

local function detect()
	local playerPos = go.get_position("object_player")
	local size = go.get("object_globals#script_globals", "tilemap_size")
	local center = go.get_position()
	local centerX = center.x
	local centerY = center.y
	local leftX = centerX - detection_diam * size
	local leftY = centerY - detection_diam * size
	local rightX = centerX + detection_diam * size
	local rightY = centerY + detection_diam * size

	if playerPos.x > leftX and playerPos.x < rightX then
		if playerPos.y > leftY and playerPos.y < rightY then
			return true
		end
	end

	return false
end

local function move_to_player(self, enemies)
	local playerPos = go.get_position("object_player")
	local size = go.get("object_globals#script_globals", "tilemap_size")
	local pos = go.get_position()

	local tpos = vmath.vector3()
	tpos.z = pos.z

	if playerPos.y > pos.y then
		tpos.x = pos.x
		tpos.y = pos.y + size
	elseif playerPos.y < pos.y then
		tpos.x = pos.x
		tpos.y = pos.y - size
	elseif playerPos.x > pos.x then
		tpos.x = pos.x + size
		tpos.y = pos.y
	elseif playerPos.x < pos.x then
		tpos.x = pos.x - size
		tpos.y = pos.y
	end

	local t = tilemap.get_tile("object_tilemap_dungeon#tilemap_dungeon", "layer1", 
	(tpos.x +1) / size, (tpos.y) / size)
	local t2 = tilemap.get_tile("object_tilemap_dungeon#tilemap_dungeon", "layer2", 
	(tpos.x) / size, (tpos.y) / size)
	
	if t == 1 and t2 == 0 then
		self.last_pos = go.get_position()
		go.set_position(tpos)
	end
end

function init(self)
	self.last_pos = go.get_position()
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("take_turn") then
		self.turn = true
		if detect() then
			move_to_player(self, message.enemies)
		end
	elseif message_id == hash("turn_over") then
		self.turn = false
	elseif message_id == hash("collision_response") then
		if self.turn then
			local d = go.get("#script_enemy", "damage")
			msg.post(message.other_id, "hit", { damage = d})
			go.set_position(self.last_pos)
		end
	elseif message_id == hash("move_to_last_pos") then
		print("moved to last pos")
		go.set_position(self.last_pos)
	end
end