go.property("damage", 1)
go.property("hp", 20)

local rendercam = require("rendercam.rendercam")

local function move(self)
	local p = go.get_position()
	local size = go.get("object_globals#script_globals", "tilemap_size")
	p.x = p.x + 1 + self.move.x * self.spacer
	p.y = p.y + 1 + self.move.y * self.spacer
	local x = p.x / size
	local y = p.y / size
	local t = tilemap.get_tile("object_tilemap_dungeon#tilemap_dungeon", "layer1", 
	math.ceil(x), math.floor(y))
	local t2 = tilemap.get_tile("object_tilemap_dungeon#tilemap_dungeon", "layer2", 
	math.ceil(x), math.floor(y))
	if t == 1 and t2 == 0 then
		local npX = p.x / size
		npX = math.floor(npX)
		npX = npX * size
		
		local npY = p.y / size
		npY = math.floor(npY)
		npY = npY * size

		local lp = vmath.vector3(npX, npY, p.z)
		go.set_position(lp)
	end
	self.move = vmath.vector3()
end

function init(self)
	self.turn = false
	msg.post(".", "acquire_input_focus")
	self.last_pos = go.get_position()
	self.moving = false
	self.move = vmath.vector3()
	self.spacer = go.get("object_globals#script_globals", "tilemap_size")
	rendercam.follow(go.get_id())
end

function update(self, dt)
	if self.moving and self.turn then
		move(self)
		self.moving = false
		msg.post("object_controller_game#script_controller_game", "end_turn")
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("place_start") then
		local p = go.get_position()
		p.x = message.x
		p.y = message.y
		go.set_position(p)
	elseif message_id == hash("collision_response") then
		if self.turn then
			go.set_position(self.last_pos)
			msg.post(message.other_id, "hit", { damage = self.damage} )
		end
	elseif message_id == hash("player_turn") then
		self.turn = true
		self.canMove = true
	elseif message_id == hash("turn_over") then
		self.turn = false
	end
end

function on_input(self, action_id, action)
	if self.turn and self.canMove then
		if action_id == hash("up") and action.pressed then
			self.last_pos = go.get_position()
			self.move.x = 0
			self.move.y = 1
			self.moving = true
			self.canMove = false
		elseif action_id == hash("down") and action.pressed then
			self.last_pos = go.get_position()
			self.move.x = 0
			self.move.y = -1
			self.moving = true
			self.canMove = false
		elseif action_id == hash("left") and action.pressed then
			self.last_pos = go.get_position()
			self.move.x = -1
			self.move.y = 0
			self.moving = true
			self.canMove = false
		elseif action_id == hash("right") and action.pressed then
			self.last_pos = go.get_position()
			self.move.x = 1
			self.moving = true
			self.move.y = 0
			self.canMove = false
		end
	end
end